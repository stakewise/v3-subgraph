specVersion: 1.2.0
description: The liquid staking protocol
repository: https://github.com/stakewise/v3-subgraph
schema:
  file: ./schema.graphql
features:
  - ipfsOnEthereumContracts
dataSources:
  - kind: ethereum/contract
    name: PeriodicTasks
    network: {{ network }}
    source:
      address: '{{ keeper.address }}'
      abi: Keeper
      startBlock: {{ keeper.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/periodicTasks.ts
      entities:
        - Network
        - Aave
        - AavePosition
        - OsToken
        - OsTokenConfig
        - OsTokenSnapshot
        - OsTokenHolder
        - OsTokenExitRequest
        - OsTokenHolderSnapshot
        - Vault
        - VaultSnapshot
        - Allocator
        - AllocatorSnapshot
        - ExitRequest
        - V2Pool
        - LeverageStrategyPosition
        - Distributor
        - PeriodicDistribution
        - DistributorReward
        - DistributorClaim
      abis:
        - name: Keeper
          file: ./abis/Keeper.json
        - name: AaveProtocolDataProvider
          file: ./abis/AaveProtocolDataProvider.json
        - name: AaveLeverageStrategy
          file: ./abis/AaveLeverageStrategy.json
        - name: OsTokenVaultController
          file: ./abis/OsTokenVaultController.json
        - name: Vault
          file: ./abis/Vault.json
        - name: Multicall
          file: ./abis/Multicall.json
        - name: OsTokenVaultEscrow
          file: ./abis/OsTokenVaultEscrow.json
      blockHandlers:
        - handler: handlePeriodicTasks
          filter:
            kind: polling
            every: {{ blocksInHour }}
  - kind: ethereum/contract
    name: ExchangeRates
    network: {{ network }}
    source:
      address: '{{ genesisVault.address }}'
      abi: PriceFeed
      startBlock: {{ genesisVault.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/exchangeRates.ts
      entities:
        - Network
        - ExchangeRateSnapshot
        - ExchangeRateStats
      abis:
        - name: PriceFeed
          file: ./abis/PriceFeed.json
        - name: Multicall
          file: ./abis/Multicall.json
      blockHandlers:
        - handler: handleExchangeRates
          filter:
            kind: polling
            every: {{ blocksInHour }}
  - kind: ethereum/contract
    name: OsToken
    network: {{ network }}
    source:
      address: '{{ osToken.address }}'
      abi: Erc20Token
      startBlock: {{ osToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/erc20Token.ts
      entities:
        - User
        - Network
        - OsToken
        - TokenTransfer
        - OsTokenHolder
        - LeverageStrategyPosition
      abis:
        - name: Erc20Token
          file: ./abis/Erc20Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: SwiseToken
    network: {{ network }}
    source:
      address: '{{ swiseToken.address }}'
      abi: Erc20Token
      startBlock: {{ swiseToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/erc20Token.ts
      entities:
        - TokenTransfer
        - SwiseTokenHolder
      abis:
        - name: Erc20Token
          file: ./abis/Erc20Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: Keeper
    network: {{ network }}
    source:
      address: '{{ keeper.address }}'
      abi: Keeper
      startBlock: {{ keeper.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/keeper.ts
      entities:
        - Network
        - User
        - Aave
        - AavePosition
        - OsToken
        - OsTokenConfig
        - OsTokenSnapshot
        - OsTokenExitRequest
        - OsTokenHolder
        - OsTokenHolderSnapshot
        - Vault
        - OwnMevEscrow
        - VaultSnapshot
        - V2Pool
        - Allocator
        - AllocatorSnapshot
        - ExitRequest
        - RewardSplitter
        - RewardSplitterShareHolder
        - LeverageStrategyPosition
      abis:
        - name: Keeper
          file: ./abis/Keeper.json
        - name: Vault
          file: ./abis/Vault.json
        - name: OsTokenVaultController
          file: ./abis/OsTokenVaultController.json
        - name: Multicall
          file: ./abis/Multicall.json
        - name: RewardSplitter
          file: ./abis/RewardSplitter.json
        - name: AaveLeverageStrategy
          file: ./abis/AaveLeverageStrategy.json
        - name: OsTokenVaultEscrow
          file: ./abis/OsTokenVaultEscrow.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: RewardsUpdated(indexed address,indexed bytes32,uint256,uint64,uint64,string)
          handler: handleRewardsUpdated
        - event: Harvested(indexed address,indexed bytes32,int256,uint256)
          handler: handleHarvested
        - event: ValidatorsApproval(indexed address,string)
          handler: handleValidatorsApproval
        - event: ConfigUpdated(string)
          handler: handleConfigUpdated
      blockHandlers:
        - handler: handleDailySnapshots
  - kind: ethereum/contract
    name: OsTokenVaultController
    network: {{ network }}
    source:
      address: '{{ osTokenVaultController.address }}'
      abi: OsTokenVaultController
      startBlock: {{ osTokenVaultController.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/osToken.ts
      entities:
        - OsToken
      abis:
        - name: OsTokenVaultController
          file: ./abis/OsTokenVaultController.json
      eventHandlers:
        - event: StateUpdated(uint256,uint256,uint256)
          handler: handleStateUpdated
        - event: FeePercentUpdated(uint16)
          handler: handleFeePercentUpdated
  - kind: ethereum/contract
    name: OsTokenConfigV1
    network: {{ network }}
    source:
      address: '{{ osTokenConfigV1.address }}'
      abi: OsTokenConfigV1
      startBlock: {{ osTokenConfigV1.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/osTokenConfig.ts
      entities:
        - Network
        - Vault
        - OsTokenConfig
        - Allocator
      abis:
        - name: OsTokenConfigV1
          file: ./abis/OsTokenConfigV1.json
      eventHandlers:
        - event: OsTokenConfigUpdated(uint16,uint16,uint16,uint16,uint16)
          handler: handleOsTokenConfigV1Updated
  - kind: ethereum/contract
    name: OsTokenConfigV2
    network: {{ network }}
    source:
      address: '{{ osTokenConfigV2.address }}'
      abi: OsTokenConfigV2
      startBlock: {{ osTokenConfigV2.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/osTokenConfig.ts
      entities:
        - Network
        - Vault
        - OsTokenConfig
        - Allocator
      abis:
        - name: OsTokenConfigV2
          file: ./abis/OsTokenConfigV2.json
      eventHandlers:
        - event: OsTokenConfigUpdated(address,uint128,uint64,uint64)
          handler: handleOsTokenConfigV2Updated
  - kind: ethereum/contract
    name: GenesisVault
    network: {{ network }}
    source:
      address: '{{ genesisVault.address }}'
      abi: GenesisVault
      startBlock: {{ genesisVault.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/vault.ts
      entities:
        - Network
        - User
        - Vault
        - Allocator
        - AllocatorAction
        - Transaction
        - OsToken
        - OsTokenConfig
        - AllocatorSnapshot
        - VaultSnapshot
      abis:
        - name: GenesisVault
          file: ./abis/GenesisVault.json
      eventHandlers:
        - event: GenesisVaultCreated(address,uint256,uint16,string)
          handler: handleGenesisVaultCreated
        - event: Migrated(address,uint256,uint256)
          handler: handleMigrated
  - kind: ethereum/contract
    name: V2RewardToken
    network: {{ network }}
    source:
      address: '{{ v2RewardToken.address }}'
      abi: V2RewardToken
      startBlock: {{ v2RewardToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
        - V2PoolUser
        - Network
        - User
      abis:
        - name: V2RewardToken
          file: ./abis/V2RewardToken.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV0
        - event: RewardsUpdated(uint256,uint256,uint256)
          handler: handleRewardsUpdatedV1
        - event: RewardsUpdated(uint256,uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV2
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleRewardTokenTransfer
  - kind: ethereum/contract
    name: V2StakedToken
    network: {{ network }}
    source:
      address: '{{ v2StakedToken.address }}'
      abi: V2StakedToken
      startBlock: {{ v2StakedToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
        - V2PoolUser
        - Network
        - User
      abis:
        - name: V2StakedToken
          file: ./abis/V2StakedToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleStakedTokenTransfer
  - kind: ethereum/contract
    name: DepositDataRegistry
    network: {{ network }}
    source:
      address: '{{ depositDataRegistry.address }}'
      abi: DepositDataRegistry
      startBlock: {{ depositDataRegistry.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/depositDataRegistry.ts
      entities:
        - Vault
        - Transaction
      abis:
        - name: DepositDataRegistry
          file: ./abis/DepositDataRegistry.json
      eventHandlers:
        - event: DepositDataManagerUpdated(indexed address,address)
          handler: handleDepositDataManagerUpdated
        - event: DepositDataMigrated(indexed address,bytes32,uint256,address)
          handler: handleDepositDataMigrated
        - event: DepositDataRootUpdated(indexed address,bytes32)
          handler: handleDepositDataRootUpdated
  - kind: ethereum/contract
    name: VestingEscrowFactory
    network: {{ network }}
    source:
      address: '{{ vestingEscrowFactory.address }}'
      abi: VestingEscrowFactory
      startBlock: {{ vestingEscrowFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/vestingEscrow.ts
      entities:
        - VestingEscrow
      abis:
        - name: VestingEscrowFactory
          file: ./abis/VestingEscrowFactory.json
      eventHandlers:
        - event: VestingEscrowCreated(indexed address,indexed address,indexed address,address,address,uint256,uint256,uint256,uint256)
          handler: handleVestingEscrowCreated
  - kind: ethereum/contract
    name: OsTokenVaultEscrow
    network: {{ network }}
    source:
      address: '{{ osTokenVaultEscrow.address }}'
      abi: OsTokenVaultEscrow
      startBlock: {{ osTokenVaultEscrow.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/osTokenVaultEscrow.ts
      entities:
        - Vault
        - OsToken
        - OsTokenConfig
        - OsTokenExitRequest
        - Allocator
        - ExitRequest
      abis:
        - name: OsTokenVaultEscrow
          file: ./abis/OsTokenVaultEscrow.json
      eventHandlers:
        - event: PositionCreated(indexed address,indexed uint256,address,uint256,uint256)
          handler: handlePositionCreated
        - event: ExitedAssetsProcessed(indexed address,indexed address,indexed uint256,uint256)
          handler: handleExitedAssetsProcessed
        - event: ExitedAssetsClaimed(indexed address,indexed address,indexed uint256,uint256,uint256)
          handler: handleExitedAssetsClaimed
        - event: OsTokenLiquidated(indexed address,indexed address,indexed uint256,address,uint256,uint256)
          handler: handleOsTokenLiquidated
        - event: OsTokenRedeemed(indexed address,indexed address,indexed uint256,address,uint256,uint256)
          handler: handleOsTokenRedeemed
  - kind: ethereum/contract
    name: MerkleDistributor
    network: {{ network }}
    source:
      address: '{{ merkleDistributor.address }}'
      abi: MerkleDistributor
      startBlock: {{ merkleDistributor.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/merkleDistributor.ts
      entities:
        - Distributor
        - Distribution
        - DistributorReward
        - DistributorClaim
        - DistributorClaimedAmount
      abis:
        - name: MerkleDistributor
          file: ./abis/merkleDistributor.json
      eventHandlers:
        - event: PeriodicDistributionAdded(indexed address,indexed address,uint256,uint256,uint256,bytes)
          handler: handlePeriodicDistributionAdded
        - event: OneTimeDistributionAdded(indexed address,indexed address,uint256,string)
          handler: handleOneTimeDistributionAdded
        - event: RewardsRootUpdated(indexed address,indexed bytes32,string)
          handler: handleRewardsRootUpdated
        - event: RewardsClaimed(indexed address,indexed address,address[],uint256[])
          handler: handleRewardsClaimed
  - kind: ethereum/contract
    name: AaveLeverageStrategy
    network: {{ network }}
    source:
      address: '{{ aaveLeverageStrategy.address }}'
      abi: AaveLeverageStrategy
      startBlock: {{ aaveLeverageStrategy.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/leverageStrategy.ts
      entities:
        - Transaction
        - OsToken
        - ExitRequest
        - Vault
        - Allocator
        - LeverageStrategyPosition
        - OsTokenHolder
        - Aave
        - AavePosition
      abis:
        - name: AaveLeverageStrategy
          file: ./abis/AaveLeverageStrategy.json
      eventHandlers:
        - event: StrategyProxyCreated(indexed bytes32,indexed address,indexed address,address)
          handler: handleStrategyProxyCreated
          calls:
            strategyProxy: AaveLeverageStrategy[event.address].getStrategyProxy(event.params.vault, event.params.user)
        - event: Deposited(indexed address,indexed address,uint256,uint256,address)
          handler: handleDeposited
        - event: ExitQueueEntered(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleExitQueueEntered
        - event: ExitedAssetsClaimed(indexed address,indexed address,uint256,uint256)
          handler: handleExitedAssetsClaimed
  - kind: ethereum/contract
    name: UniswapFactory
    network: {{ network }}
    source:
      address: '{{ uniswapFactory.address }}'
      abi: UniswapFactory
      startBlock: {{ uniswapFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/uniswap.ts
      entities:
        - UniswapPool
      abis:
        - name: UniswapFactory
          file: ./abis/UniswapFactory.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint24,int24,address)
          handler: handlePoolCreated
          topic1: ['{{ osToken.address }}', '{{ swiseToken.address }}']
          topic2: ['{{ osToken.address }}', '{{ swiseToken.address }}']
  - kind: ethereum/contract
    name: UniswapPositionManager
    network: {{ network }}
    source:
      address: '{{ uniswapPositionManager.address }}'
      abi: UniswapPositionManager
      startBlock: {{ uniswapPositionManager.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/uniswap.ts
      entities:
        - UniswapPool
        - UniswapPosition
      abis:
        - name: UniswapPositionManager
          file: ./abis/UniswapPositionManager.json
        - name: UniswapFactory
          file: ./abis/UniswapFactory.json
      eventHandlers:
        - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleIncreaseLiquidity
          calls:
            uniPosition: UniswapPositionManager[event.address].positions(event.params.tokenId)
        - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleDecreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
          calls:
            uniPosition: UniswapPositionManager[event.address].positions(event.params.tokenId)
  - kind: ethereum/contract
    name: StrategiesRegistry
    network: {{ network }}
    source:
      address: '{{ strategiesRegistry.address }}'
      abi: StrategiesRegistry
      startBlock: {{ strategiesRegistry.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/strategiesRegistry.ts
      entities:
        - Aave
        - OsTokenConfig
        - Vault
        - Network
      abis:
        - name: StrategiesRegistry
          file: ./abis/StrategiesRegistry.json
      eventHandlers:
        - event: StrategyConfigUpdated(indexed bytes32,string,bytes)
          handler: handleStrategyConfigUpdated
templates:
  - kind: ethereum/contract
    name: VaultFactory
    network: {{ network }}
    source:
      abi: VaultFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/vaultFactory.ts
      entities:
        - Vault
        - Network
        - Transaction
        - OsTokenConfig
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address,address,bytes)
          handler: handleVaultCreated
  - kind: ethereum/contract
    name: RewardSplitterFactory
    network: {{ network }}
    source:
      abi: RewardSplitterFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/rewardSplitter.ts
      entities:
        - RewardSplitter
        - Transaction
      abis:
        - name: RewardSplitterFactory
          file: ./abis/RewardSplitterFactory.json
      eventHandlers:
        - event: RewardSplitterCreated(address,address,address)
          handler: handleRewardSplitterCreated
  - kind: ethereum/contract
    name: Vault
    network: {{ network }}
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/vault.ts
      entities:
        - Network
        - User
        - OsToken
        - OsTokenConfig
        - Vault
        - Allocator
        - AllocatorAction
        - ExitRequest
        - Transaction
        - LeverageStrategyPosition
      abis:
        - name: Vault
          file: ./abis/Vault.json
      eventHandlers:
        - event: Deposited(indexed address,indexed address,uint256,uint256,address)
          handler: handleDeposited
        - event: Redeemed(indexed address,indexed address,uint256,uint256)
          handler: handleRedeemed
        - event: ExitQueueEntered(indexed address,indexed address,uint256,uint256)
          handler: handleV1ExitQueueEntered
        - event: V2ExitQueueEntered(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleV2ExitQueueEntered
        - event: ExitedAssetsClaimed(indexed address,uint256,uint256,uint256)
          handler: handleExitedAssetsClaimed
        - event: ValidatorsRootUpdated(indexed address,indexed bytes32)
          handler: handleValidatorsRootUpdated
        - event: MetadataUpdated(indexed address,string)
          handler: handleMetadataUpdated
        - event: FeeRecipientUpdated(indexed address,indexed address)
          handler: handleFeeRecipientUpdated
        - event: KeysManagerUpdated(indexed address,indexed address)
          handler: handleKeysManagerUpdated
        - event: ValidatorsManagerUpdated(indexed address,indexed address)
          handler: handleValidatorsManagerUpdated
        - event: OsTokenMinted(indexed address,address,uint256,uint256,address)
          handler: handleOsTokenMinted
        - event: OsTokenBurned(indexed address,uint256,uint256)
          handler: handleOsTokenBurned
        - event: OsTokenLiquidated(indexed address,indexed address,address,uint256,uint256,uint256)
          handler: handleOsTokenLiquidated
        - event: OsTokenRedeemed(indexed address,indexed address,address,uint256,uint256,uint256)
          handler: handleOsTokenRedeemed
        - event: Initialized(uint64)
          handler: handleInitialized
        - event: CheckpointCreated(uint256,uint256)
          handler: handleCheckpointCreated
  - kind: ethereum/contract
    name: OwnMevEscrow
    network: {{ network }}
    source:
      abi: OwnMevEscrow
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/mevEscrow.ts
      entities:
        - OwnMevEscrow
      abis:
        - name: OwnMevEscrow
          file: ./abis/OwnMevEscrow.json
      eventHandlers:
        - event: Harvested(uint256)
          handler: handleHarvested
  - kind: ethereum/contract
    name: PrivateVault
    network: {{ network }}
    source:
      abi: PrivateVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/privateVault.ts
      entities:
        - Vault
        - PrivateVaultAccount
        - Transaction
      abis:
        - name: PrivateVault
          file: ./abis/PrivateVault.json
      eventHandlers:
        - event: WhitelistUpdated(indexed address,indexed address,bool)
          handler: handleWhitelistUpdated
        - event: WhitelisterUpdated(indexed address,indexed address)
          handler: handleWhitelisterUpdated
  - kind: ethereum/contract
    name: BlocklistVault
    network: {{ network }}
    source:
      abi: BlocklistVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/blocklistVault.ts
      entities:
        - Vault
        - VaultBlockedAccount
        - Transaction
      abis:
        - name: BlocklistVault
          file: ./abis/BlocklistVault.json
      eventHandlers:
        - event: BlocklistUpdated(indexed address,indexed address,bool)
          handler: handleBlocklistUpdated
        - event: BlocklistManagerUpdated(indexed address,indexed address)
          handler: handleBlocklistManagerUpdated
  - kind: ethereum/contract
    name: Erc20Vault
    network: {{ network }}
    source:
      abi: Erc20Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/erc20Vault.ts
      entities:
        - Network
        - User
        - Vault
        - OsToken
        - OsTokenConfig
        - Allocator
        - AllocatorAction
        - Transaction
        - LeverageStrategyPosition
      abis:
        - name: Erc20Vault
          file: ./abis/Erc20Vault.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: FoxVault
    network: {{ network }}
    source:
      abi: FoxVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/vault.ts
      entities:
        - Network
        - User
        - Vault
        - OsToken
        - OsTokenConfig
        - Allocator
        - AllocatorAction
        - Transaction
      abis:
        - name: FoxVault
          file: ./abis/FoxVault.json
      eventHandlers:
        - event: EthFoxVaultCreated(address,address,uint256,uint16,string)
          handler: handleFoxVaultCreated
  - kind: ethereum/contract
    name: GnoVault
    network: {{ network }}
    source:
      abi: GnoVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/gnoVault.ts
      entities:
        - Network
        - Vault
        - OsToken
        - OsTokenConfig
        - VaultSnapshot
        - Allocator
        - AllocatorSnapshot
        - LeverageStrategyPosition
      abis:
        - name: GnoVault
          file: ./abis/GnoVault.json
      eventHandlers:
        - event: XdaiSwapped(uint256,uint256)
          handler: handleXdaiSwapped
  - kind: ethereum/contract
    name: RewardSplitter
    network: {{ network }}
    source:
      abi: RewardSplitter
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/rewardSplitter.ts
      entities:
        - RewardSplitter
        - RewardSplitterShareHolder
        - Transaction
      abis:
        - name: RewardSplitter
          file: ./abis/RewardSplitter.json
      eventHandlers:
        - event: SharesIncreased(indexed address,uint256)
          handler: handleSharesIncreased
        - event: SharesDecreased(indexed address,uint256)
          handler: handleSharesDecreased
        - event: RewardsWithdrawn(indexed address,uint256)
          handler: handleRewardsWithdrawn
  - kind: ethereum/contract
    name: UniswapPool
    network: {{ network }}
    source:
      abi: UniswapPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./mappings/uniswap.ts
      entities:
        - UniswapPool
      abis:
        - name: UniswapPool
          file: ./abis/UniswapPool.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
