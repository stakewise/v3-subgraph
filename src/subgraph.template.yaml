specVersion: 0.0.7
description: The liquid staking protocol
repository: https://github.com/stakewise/v3-subgraph
schema:
  file: ./schema.graphql
features:
  - ipfsOnEthereumContracts
dataSources:
  - kind: ethereum/contract
    name: VaultFactory
    network: {{ network }}
    source:
      address: '{{ ethVaultFactory.address }}'
      abi: VaultFactory
      startBlock: {{ ethVaultFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vaultFactory.ts
      entities:
        - Vault
        - Network
        - Transaction
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address,address,bytes)
          handler: handleVaultCreated
  - kind: ethereum/contract
    name: PrivVaultFactory
    network: {{ network }}
    source:
      address: '{{ ethPrivVaultFactory.address }}'
      abi: VaultFactory
      startBlock: {{ ethPrivVaultFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vaultFactory.ts
      entities:
        - Vault
        - Network
        - Transaction
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address,address,bytes)
          handler: handlePrivVaultCreated
  - kind: ethereum/contract
    name: Erc20VaultFactory
    network: {{ network }}
    source:
      address: '{{ ethErc20VaultFactory.address }}'
      abi: VaultFactory
      startBlock: {{ ethErc20VaultFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vaultFactory.ts
      entities:
        - Vault
        - Network
        - Transaction
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address,address,bytes)
          handler: handleErc20VaultCreated
  - kind: ethereum/contract
    name: PrivErc20VaultFactory
    network: {{ network }}
    source:
      address: '{{ ethPrivErc20VaultFactory.address }}'
      abi: VaultFactory
      startBlock: {{ ethPrivErc20VaultFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vaultFactory.ts
      entities:
        - Vault
        - Network
        - Transaction
      abis:
        - name: VaultFactory
          file: ./abis/VaultFactory.json
      eventHandlers:
        - event: VaultCreated(indexed address,indexed address,address,bytes)
          handler: handlePrivErc20VaultCreated
  - kind: ethereum/contract
    name: Keeper
    network: {{ network }}
    source:
      address: '{{ keeper.address }}'
      abi: Keeper
      startBlock: {{ keeper.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/keeper.ts
      entities:
        - Vault
        - DaySnapshot
      abis:
        - name: Keeper
          file: ./abis/Keeper.json
      eventHandlers:
        - event: RewardsUpdated(indexed address,indexed bytes32,uint256,uint64,uint64,string)
          handler: handleRewardsUpdated
        - event: Harvested(indexed address,indexed bytes32,int256,uint256)
          handler: handleHarvested
  - kind: ethereum/contract
    name: OsTokenVaultController
    network: {{ network }}
    source:
      address: '{{ osTokenVaultController.address }}'
      abi: OsTokenVaultController
      startBlock: {{ osTokenVaultController.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/osToken.ts
      entities:
        - OsToken
      abis:
        - name: OsTokenVaultController
          file: ./abis/OsTokenVaultController.json
      eventHandlers:
        - event: AvgRewardPerSecondUpdated(uint256)
          handler: handleAvgRewardPerSecondUpdated
  - kind: ethereum/contract
    name: GenesisVault
    network: {{ network }}
    source:
      address: '{{ genesisVault.address }}'
      abi: GenesisVault
      startBlock: {{ genesisVault.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vault.ts
      entities:
        - Vault
        - Allocator
        - DaySnapshot
        - AllocatorAction
        - Transaction
      abis:
        - name: GenesisVault
          file: ./abis/GenesisVault.json
      eventHandlers:
        - event: GenesisVaultCreated(address,uint256,uint16,string)
          handler: handleGenesisVaultCreated
        - event: Migrated(address,uint256,uint256)
          handler: handleMigrated
  - kind: ethereum/contract
    name: RewardSplitterFactory
    network: {{ network }}
    source:
      address: '{{ rewardSplitterFactory.address }}'
      abi: RewardSplitterFactory
      startBlock: {{ rewardSplitterFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/rewardSplitter.ts
      entities:
        - RewardSplitter
        - Transaction
      abis:
        - name: RewardSplitterFactory
          file: ./abis/RewardSplitterFactory.json
      eventHandlers:
        - event: RewardSplitterCreated(address,address,address)
          handler: handleRewardSplitterCreated
  - kind: ethereum/contract
    name: V2RewardEthTokenV0
    network: {{ network }}
    source:
      address: '{{ v2RewardEthToken.address }}'
      abi: V2RewardEthTokenV0
      startBlock: {{ v2RewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
      abis:
        - name: V2RewardEthTokenV0
          file: ./abis/V2RewardEthTokenV0.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV0
  - kind: ethereum/contract
    name: V2RewardEthTokenV1
    network: {{ network }}
    source:
      address: '{{ v2RewardEthToken.address }}'
      abi: V2RewardEthTokenV1
      startBlock: {{ v2RewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
      abis:
        - name: V2RewardEthTokenV1
          file: ./abis/V2RewardEthTokenV1.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256)
          handler: handleRewardsUpdatedV1
  - kind: ethereum/contract
    name: V2RewardEthTokenV2
    network: {{ network }}
    source:
      address: '{{ v2RewardEthToken.address }}'
      abi: V2RewardEthTokenV2
      startBlock: {{ v2RewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
      abis:
        - name: V2RewardEthTokenV2
          file: ./abis/V2RewardEthTokenV2.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV2
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleRewardEthTokenTransfer
  - kind: ethereum/contract
    name: V2StakedEthToken
    network: {{ network }}
    source:
      address: '{{ v2StakedEthToken.address }}'
      abi: V2StakedEthToken
      startBlock: {{ v2StakedEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/v2pool.ts
      entities:
        - V2Pool
      abis:
        - name: V2StakedEthToken
          file: ./abis/V2StakedEthToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleStakedEthTokenTransfer
templates:
  - kind: ethereum/contract
    name: Vault
    network: {{ network }}
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/vault.ts
      entities:
        - Vault
        - Allocator
        - ExitRequest
        - DaySnapshot
        - AllocatorAction
        - Transaction
      abis:
        - name: Vault
          file: ./abis/Vault.json
      eventHandlers:
        - event: Deposited(indexed address,indexed address,uint256,uint256,address)
          handler: handleDeposited
        - event: Redeemed(indexed address,indexed address,uint256,uint256)
          handler: handleRedeemed
        - event: ExitQueueEntered(indexed address,indexed address,uint256,uint256)
          handler: handleExitQueueEntered
        - event: ExitedAssetsClaimed(indexed address,uint256,uint256,uint256)
          handler: handleExitedAssetsClaimed
        - event: ValidatorsRootUpdated(indexed address,indexed bytes32)
          handler: handleValidatorsRootUpdated
        - event: MetadataUpdated(indexed address,string)
          handler: handleMetadataUpdated
        - event: FeeRecipientUpdated(indexed address,indexed address)
          handler: handleFeeRecipientUpdated
        - event: KeysManagerUpdated(indexed address,indexed address)
          handler: handleKeysManagerUpdated
        - event: CheckpointCreated(uint256,uint256)
          handler: handleCheckpointCreated
        - event: FeeSharesMinted(address,uint256,uint256)
          handler: handleFeeSharesMinted
        - event: OsTokenMinted(indexed address,address,uint256,uint256,address)
          handler: handleOsTokenMinted
        - event: OsTokenBurned(indexed address,uint256,uint256)
          handler: handleOsTokenBurned
        - event: OsTokenLiquidated(indexed address,indexed address,address,uint256,uint256,uint256)
          handler: handleOsTokenLiquidated
        - event: OsTokenRedeemed(indexed address,indexed address,address,uint256,uint256,uint256)
          handler: handleOsTokenRedeemed
  - kind: ethereum/contract
    name: PrivateVault
    network: {{ network }}
    source:
      abi: PrivateVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/privateVault.ts
      entities:
        - Vault
        - PrivateVaultAccount
        - Transaction
      abis:
        - name: PrivateVault
          file: ./abis/PrivateVault.json
      eventHandlers:
        - event: WhitelistUpdated(indexed address,indexed address,bool)
          handler: handleWhitelistUpdated
        - event: WhitelisterUpdated(indexed address,indexed address)
          handler: handleWhitelisterUpdated
  - kind: ethereum/contract
    name: Erc20Vault
    network: {{ network }}
    source:
      abi: Erc20Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/erc20Vault.ts
      entities:
        - Allocator
        - Transaction
      abis:
        - name: Erc20Vault
          file: ./abis/Erc20Vault.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: RewardSplitter
    network: {{ network }}
    source:
      abi: RewardSplitter
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./mappings/rewardSplitter.ts
      entities:
        - RewardSplitter
        - RewardSplitterShareHolder
        - Transaction
      abis:
        - name: RewardSplitter
          file: ./abis/RewardSplitter.json
      eventHandlers:
        - event: SharesIncreased(indexed address,uint256)
          handler: handleSharesIncreased
        - event: SharesDecreased(indexed address,uint256)
          handler: handleSharesDecreased
